{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdantonio/Desktop/mod5_volunteer_frontend/src/components/TaskPage.js\";\nimport React from 'react';\nimport LoadingSpinner from './LoadingSpinner';\n\nclass TaskPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: null,\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/tasks/${this.props.match.params.id}`).then(r => r.json()).then(task => {\n      this.setState({\n        task: task,\n        loaded: true\n      });\n      console.log(this.state);\n    });\n  }\n\n  buttonDisplay(task) {\n    if (task.task_doer === null) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buttonLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }\n      }, \"Accept Task\");\n    }\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (!this.state.loaded) {\n      return /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const task = this.state.task;\n    const {\n      description,\n      task_creator\n    } = task;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, task_creator.username, \" Needs a Hand\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, description), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.buttonDisplay(task)));\n  }\n\n}\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/andrewdantonio/Desktop/mod5_volunteer_frontend/src/components/TaskPage.js"],"names":["React","LoadingSpinner","TaskPage","Component","state","task","loaded","componentDidMount","fetch","props","match","params","id","then","r","json","setState","console","log","buttonDisplay","task_doer","render","description","task_creator","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAF2B;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAE,+BAA8B,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA3D,CAAL,CACDC,IADC,CACIC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADT,EAEDF,IAFC,CAEIR,IAAI,IAAI;AACZ,WAAKW,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAEA,IADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAKAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACD,KATC;AAUH;;AAEDe,EAAAA,aAAa,CAACd,IAAD,EAAO;AAClB,QAAIA,IAAI,CAACe,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,0BAAO;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;;AACA,QAAI,CAAC,KAAKL,KAAL,CAAWE,MAAhB,EAAwB;AACpB,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,UAAMD,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,UAAM;AAACiB,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAA8BlB,IAApC;AAGA,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,YAAY,CAACC,QAAlB,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,WAAN,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKH,aAAL,CAAmBd,IAAnB,CADD,CAHF,CADF;AASH;;AA7CkC;;AAgDvC,eAAeH,QAAf","sourcesContent":["import React from 'react'\nimport LoadingSpinner from './LoadingSpinner'\n\nclass TaskPage extends React.Component {\n\n    state = {\n        task: null,\n        loaded: false\n    }\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/tasks/${this.props.match.params.id}`)\n      .then(r => r.json())\n      .then(task => {\n        this.setState({\n          task: task,\n          loaded: true\n          \n        })\n        console.log(this.state)\n      })\n    }\n\n    buttonDisplay(task) {\n      if (task.task_doer === null) {\n        return <button className=\"buttonLogo\" >Accept Task</button>\n      }\n    }\n\n    render() {\n        console.log(this.props)\n        if (!this.state.loaded) {\n            return <LoadingSpinner />\n        }\n\n        const task = this.state.task\n        const {description, task_creator} = task\n        \n\n        return(\n          <>\n            <h1>{task_creator.username} Needs a Hand</h1>\n            <div>{description}</div>\n            <div>\n            {this.buttonDisplay(task)}\n            </div>\n          </>\n        )\n    }\n}\n\nexport default TaskPage;"]},"metadata":{},"sourceType":"module"}