{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdantonio/Desktop/mod5_volunteer_frontend/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport { API_URL } from './constants/index.js';\nimport Header from './components/Header.js';\nimport LoginForm from './components/LoginForm.js';\nimport SignupForm from './components/SignupForm.js';\nimport LendTaskContainer from './components/LendTaskContainer.js';\nimport ProfilePage from './components/ProfilePage.js';\nimport CreateTaskForm from './components/CreateTaskForm.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null,\n      tasks: [],\n      classifications: []\n    };\n\n    this.handleUpdateCurrentUser = user => {\n      this.setState({\n        currentUser: user\n      });\n    };\n\n    this.handleAcceptTask = (id, task) => {\n      fetch(API_URL + `/tasks/` + id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(task)\n      }).then(r => r.json()).then(updatedTask => {\n        this.props.history.push(\"/profile\");\n        this.getTasks();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAutologin();\n    this.getTasks();\n  }\n\n  getAutologin() {\n    fetch(API_URL + \"/autologin\", {\n      credentials: \"include\"\n    }).then(r => {\n      if (!r.ok) {\n        throw r;\n      }\n\n      return r.json();\n    }).then(user => this.setState({\n      currentUser: user\n    })).catch(console.error);\n  }\n\n  getTasks() {\n    fetch(API_URL + \"/tasks\").then(r => r.json()).then(tasksArray => {\n      this.setState({\n        tasks: tasksArray\n      });\n    });\n  }\n\n  getClassifications() {\n    fetch(API_URL + \"/classifications\").then(r => r.json()).then(claArray => {\n      this.setState({\n        tasks: tasksArray\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      handleUpdateCurrentUser: this.handleUpdateCurrentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routeProps => /*#__PURE__*/React.createElement(LoginForm, Object.assign({\n        handleUpdateCurrentUser: this.handleUpdateCurrentUser\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routeProps => /*#__PURE__*/React.createElement(SignupForm, Object.assign({\n        handleUpdateCurrentUser: this.handleUpdateCurrentUser\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routeProps => /*#__PURE__*/React.createElement(LendTaskContainer, Object.assign({\n        tasks: this.state.tasks,\n        handleAcceptTask: this.handleAcceptTask\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 57\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routeProps => /*#__PURE__*/React.createElement(ProfilePage, Object.assign({\n        currentUser: this.state.currentUser,\n        tasks: this.state.tasks\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/createtask\",\n      render: routeProps => /*#__PURE__*/React.createElement(CreateTaskForm, Object.assign({\n        currentUser: this.state.currentUser\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 67\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/andrewdantonio/Desktop/mod5_volunteer_frontend/src/App.js"],"names":["React","Route","Switch","withRouter","API_URL","Header","LoginForm","SignupForm","LendTaskContainer","ProfilePage","CreateTaskForm","App","Component","state","currentUser","tasks","classifications","handleUpdateCurrentUser","user","setState","handleAcceptTask","id","task","fetch","method","headers","credentials","body","JSON","stringify","then","r","json","updatedTask","props","history","push","getTasks","componentDidMount","getAutologin","ok","catch","console","error","tasksArray","getClassifications","claArray","render","routeProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport './App.css';\nimport { API_URL } from './constants/index.js'\nimport Header from './components/Header.js'\nimport LoginForm from './components/LoginForm.js'\nimport SignupForm from './components/SignupForm.js'\nimport LendTaskContainer from './components/LendTaskContainer.js'\nimport ProfilePage from './components/ProfilePage.js'\nimport CreateTaskForm from './components/CreateTaskForm.js'\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null,\n    tasks: [],\n    classifications: []\n    \n  }\n\n  handleUpdateCurrentUser = user => {\n    this.setState({\n      currentUser: user\n    })\n  }\n\n  componentDidMount() {\n    this.getAutologin()\n    this.getTasks()\n  }\n\n  getAutologin() {\n    fetch(API_URL + \"/autologin\", {\n      credentials: \"include\"\n    })\n      .then(r => {\n        if (!r.ok) {\n          throw r\n        }\n        return r.json()\n      })\n      .then(user => this.setState({ currentUser: user }))\n      .catch(console.error)\n  }\n\n  getTasks() {\n    fetch(API_URL +\"/tasks\")\n        .then(r => r.json())\n        .then(tasksArray => {\n            this.setState({\n                tasks: tasksArray\n            })\n        })\n  }\n\n  getClassifications() {\n    fetch(API_URL +\"/classifications\")\n        .then(r => r.json())\n        .then(claArray => {\n            this.setState({\n                tasks: tasksArray\n            })\n        })\n  }\n\n  handleAcceptTask = (id, task) => {\n        \n\n    fetch(API_URL + `/tasks/`+ id, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\" \n        },\n        credentials: \"include\",\n        body: JSON.stringify(task)\n    })\n    .then(r => r.json())\n    .then(updatedTask => {\n        this.props.history.push(\"/profile\")\n        this.getTasks()\n        \n    })\n}\n  \n  render() {\n    \n    \n  return (\n    <>\n      <Header currentUser={this.state.currentUser} handleUpdateCurrentUser={this.handleUpdateCurrentUser}/>\n      <main>\n        <Switch>\n          <Route exact path='/login' render={(routeProps) => <LoginForm handleUpdateCurrentUser={this.handleUpdateCurrentUser} {...routeProps} />} />\n          <Route exact path='/signup' render={(routeProps) => <SignupForm handleUpdateCurrentUser={this.handleUpdateCurrentUser} {...routeProps} />} />\n          <Route exact path='/' render={(routeProps) => <LendTaskContainer tasks={this.state.tasks} handleAcceptTask ={this.handleAcceptTask} {...routeProps} />} />\n          <Route exact path='/profile' render={(routeProps) => <ProfilePage currentUser= {this.state.currentUser} tasks={this.state.tasks} {...routeProps} />} />\n          <Route exact path='/createtask' render={(routeProps) => <CreateTaskForm currentUser= {this.state.currentUser} {...routeProps} />} />    \n        </Switch>\n      </main>\n    </>\n  )\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}